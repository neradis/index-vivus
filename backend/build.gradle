apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'

sourceCompatibility = '1.7'
targetCompatibility = '1.7'

repositories {
	 mavenCentral()
        flatDir name: 'local', dirs: file('libs')
}

dependencies {
    dependencies {
        compile 'com.google.guava:guava:13.+'
        compile 'log4j:log4j:1.2.+'
        compile 'org.apache.lucene:lucene-core:3.6.0'
        compile files('./libs/lingpipe-4.1.0.jar')
        testCompile 'log4j:log4j:1.2.+'
    }
}


eclipse {
  jdt {
    sourceCompatibility = 1.7
    targetCompatibility = 1.7
  }

  classpath {
    defaultOutputDir = sourceSets.main.output.classesDir

    downloadSources = true
    downloadJavadoc = true
  }

}




rootProject.idea.project {
  jdkName = '1.7'
  languageLevel = 1.7
}

idea {
  module {
    inheritOutputDirs = false
    outputDir = sourceSets.main.output.classesDir
    testOutputDir = sourceSets.test.output.classesDir

    downloadSources = true
    downloadJavadoc = true
  }
}








//helper task for build investigations/debugging
task view {
    ext.viewObj = {
        println([class: it.class, properties: it.properties.keySet(), dump: it.dump()].entrySet().collect({
            "### $it.key ###\n$it.value\n\n"
        }).join('\n'))
    }

    ext.viewFiles = { FileCollection fc ->
        //println "#### dependencies for $conf.name"
        fc.each { File file ->
            println file.canonicalPath
        }
    }

    doLast {
        viewFiles(configurations.compile)
      viewObj(project.idea)
      viewObj(project.idea.module)
      /*viewObj(project.eclipse)
      viewObj(project.eclipse.jdt)
      viewObj(project.eclipse.project)*/

    }
}